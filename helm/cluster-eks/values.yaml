# Auto-generated by helm-values-gen, do not edit!

cluster:
  providerIntegration:
    apps:
      capiNodeLabeler:
        enable: true
      certExporter:
        enable: true
      certManager:
        enable: true
      chartOperatorExtensions:
        enable: true
      cilium:
        configTemplateName: EKSCiliumHelmValues
        enable: true
      ciliumServiceMonitors:
        enable: true
      clusterAutoscaler:
        configTemplateName: EKSClusterAutoscalerHelmValues
        enable: true
      coreDns:
        enable: true
      coreDnsExtensions:
        configTemplateName: EKSCorednsHelmValues
        enable: true
      externalDns:
        configTemplateName: EKSExternalDNSHelmValues
        enable: true
      k8sDnsNodeCache:
        enable: true
      metricsServer:
        enable: true
      netExporter:
        configTemplateName: EKSNetExporterHelmValues
        enable: true
      networkPolicies:
        configTemplateName: EKSNetworkPoliciesHelmValues
        enable: true
      nodeExporter:
        enable: true
      observabilityBundle:
        enable: true
      observabilityPolicies:
        enable: true
      securityBundle:
        configTemplateName: EKSSecurityBundleHelmValues
        enable: true
      teleportKubeAgent:
        enable: true
      verticalPodAutoscaler:
        enable: true
      verticalPodAutoscalerCrd:
        enable: true
    controlPlane:
      resources:
        controlPlane:
          api:
            group: controlplane.cluster.x-k8s.io
            kind: AWSManagedControlPlane
            version: v1beta2
        infrastructureMachineTemplate:
          group: controlplane.cluster.x-k8s.io
          kind: AWSManagedControlPlane
          version: v1beta2
        infrastructureMachineTemplateSpecTemplateName: template-not-implemented
    provider: eks
    resourcesApi:
      bastionResourceEnabled: false
      cleanupHelmReleaseResourcesEnabled: false
      clusterResourceEnabled: true
      controlPlaneResourceEnabled: false
      helmRepositoryResourcesEnabled: true
      infrastructureCluster:
        group: infrastructure.cluster.x-k8s.io
        kind: AWSManagedCluster
        version: v1beta2
      infrastructureMachinePool:
        group: infrastructure.cluster.x-k8s.io
        kind: AWSManagedMachinePool
        version: v1beta2
      machineHealthCheckResourceEnabled: false
      machinePool:
        bootstrap:
          templateName: machine-pool-bootstrap-config
      machinePoolResourcesEnabled: true
      nodePoolKind: MachinePool
    useReleases: true
    workers:
      defaultNodePools:
        def00:
          cloneMode: linkedClone
          machineHealthCheck:
            enabled: true
            maxUnhealthy: 40%
            nodeStartupTimeout: 20m0s
            unhealthyNotReadyTimeout: 10m0s
            unhealthyUnknownTimeout: 10m0s
          memoryMiB: 16896
          network: {}
          numCPUs: 6
          replicas: 2
          resourcePool: '*/Resources'
          template: ""
      kubeadmConfig:
        enabled: false
      resources:
        infrastructureMachineTemplateSpecTemplateName: managed-machine-pool-spec
global:
  connectivity:
    availabilityZoneUsageLimit: 3
    network:
      pods:
        cidrBlocks:
          - 100.64.0.0/16
      services:
        cidrBlocks:
          - 172.31.0.0/16
      vpcCidr: 10.0.0.0/16
    podSubnets:
      - cidrBlocks:
          - availabilityZone: a
            cidr: 100.64.0.0/18
            tags:
              sigs.k8s.io/cluster-api-provider-aws/association: secondary
          - availabilityZone: b
            cidr: 100.64.64.0/18
            tags:
              sigs.k8s.io/cluster-api-provider-aws/association: secondary
          - availabilityZone: c
            cidr: 100.64.128.0/18
            tags:
              sigs.k8s.io/cluster-api-provider-aws/association: secondary
    proxy: {}
    subnets:
      - cidrBlocks:
          - availabilityZone: a
            cidr: 10.0.0.0/20
          - availabilityZone: b
            cidr: 10.0.16.0/20
          - availabilityZone: c
            cidr: 10.0.32.0/20
        isPublic: true
      - cidrBlocks:
          - availabilityZone: a
            cidr: 10.0.64.0/18
          - availabilityZone: b
            cidr: 10.0.128.0/18
          - availabilityZone: c
            cidr: 10.0.192.0/18
        isPublic: false
  controlPlane:
    apiMode: public
    encryptionConfig: {}
    logging:
      apiServer: true
      audit: true
      authenticator: true
      controllerManager: true
    oidc: {}
  metadata:
    preventDeletion: false
    servicePriority: highest
  podSecurityStandards:
    enforced: true
  providerSpecific:
    awsAccountId: ""
    awsClusterRoleIdentityName: default
internal:
  nodePools:
    def00:
      amiType: AL2023_x86_64_STANDARD
      customNodeLabels:
        - label=default
      instanceType: r6i.xlarge
      maxSize: 4
      minSize: 3
  sandboxContainerImage:
    name: giantswarm/pause
    registry: gsoci.azurecr.io
    tag: 3.10.1
kubectlImage:
  name: giantswarm/kubectl
  registry: gsoci.azurecr.io
  tag: 1.31.4
